blueprint:
  name: ZHA - Lidl 4Button Remote Switch
  description: Automate your Lidl/LivarnoLux 4Button Remote Switch using ZHA events.
  domain: automation
  input:
    Lidl_4Button_Remote_switch:
      name: Lidl 4Button Remote Switch
      description: Lidl 4Button Remote Switch to use
      selector:
        device:
          integration: zha
          manufacturer: _TYZB01_bngwdjsr
          model: TS1001

    button_one_short_press:
      name: Single Press
      description: Action to run on button 1 single press
      default: []
      selector:
        action: {}

    button_two_short_press:
      name: Single Press
      description: Action to run on button 2 single press
      default: []
      selector:
        action: {}

    button_three_short_press:
      name: Single Press
      description: Action to run on button 3 single press
      default: []
      selector:
        action: {}

    button_four_short_press:
      name: Single Press
      description: Action to run on button 4 single press
      default: []
      selector:
        action: {}

mode: restart
max_exceeded: silent

trigger:
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input 'Lidl_4Button_Remote_switch'

action:
- variables:
    command: '{{ trigger.event.data.command }}'   
    endpoint_id: '{{ trigger.event.data.endpoint_id }}'
    cluster_id: '{{ trigger.event.data.cluster_id }}'
    args: '{{ trigger.event.data.args[0] }}'

#Here we choose which button is pressed by the details we got from the event
- choose:
  
  #Here we handle the Off Button
  - conditions: "{{ command == 'off'  and cluster_id == 6 }}"
    sequence: !input 'button_one_short_press'

  #Here we handle the On Button
  - conditions: "{{ command == 'on' and endpoint_id == 1 and cluster_id == 6 }}"
    sequence: !input 'button_two_short_press'
    
  #Here we handle the Up button
  - conditions: "{{  command == 'step' and endpoint_id == '1' and cluster_id == 8 and args == 0 }}"
    sequence: !input 'button_three_short_press'
    
  #Here we handle the Down button
  - conditions: "{{  command == 'step' and endpoint_id == '1' and cluster_id == 8 and args == 1 }}"
    sequence: !input 'button_four_short_press'
    
